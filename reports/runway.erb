<% @burn_down = query do %>
with weeks as (
 select
   x,
   '2014-01-06'::date + (x || ' weeks')::interval as xtn_date
  from
    generate_series(0,104) x
),
assets as (
  select
    xtn_date,
    xtn_week,
    amount
  from
    ledger
  where
    account in ('Assets:Schwab:Checking', 'Assets:Amex')
  order by
    xtn_date,
    amount
)
select
  weeks.xtn_date::date as "Week",
  (select sum(amount) from assets where xtn_date <= weeks.xtn_date) as "Starting",
  (select sum(case when amount > 0 then amount else 0 end) from assets where xtn_date between weeks.xtn_date + '1 day'::interval and weeks.xtn_date + '1 week'::interval) as "Cash In",
  (select sum(case when amount < 0 then amount else 0 end) from assets where xtn_date between weeks.xtn_date + '1 day'::interval and weeks.xtn_date + '1 week'::interval) as "Cash Out",
  (select sum(amount) from assets where xtn_date <= weeks.xtn_date + '1 week'::interval) as "Ending"
from
  weeks
where
  xtn_date + '1 week'::interval <= date_trunc('week', now()::date) + '1 week'::interval
union all
select
  week,
  coalesce(lag(ending, 1) over (rows unbounded preceding) + (select sum(amount) from assets), (select sum(amount) from assets)) as starting,
  coalesce(cash_in, 0),
  coalesce(cash_out, 0),
  ending + (select sum(amount) from assets)
from (
  select
     week,
     250 + case when week_num = 1 then 400 else 0 end as cash_in,
     cash_out,
     sum(cash_out + 250 + case when week_num = 1 then 400 else 0 end) over (rows unbounded preceding) as ending
  from (
    select
      week,
      week_num,                                   
      -1 * coalesce((select sum(amount) from budget_periods where week = week_num and to_date is null), 0) - (case when week_num = 1 then 1500 else 0 end) as cash_out
    from (
      select
        week,
        row_number() over (partition by date_trunc('month', week) order by week) as week_num
      from (
        select
          ('2014-01-06'::date + (x || ' weeks')::interval)::date as week
        from
          generate_series(0,104) x
      ) x
    ) x
    where                                    
      week > date_trunc('week', now()::date)
  ) x
) x
<% end %>

<div class="page-title">
  <h1>Runway</h1>
</div>
<div class="row">
  <div class="span12">
    <p>This shows actual cash in and cash out of Schwab and Amex Savings accounts up to and including the current week (highlighted in blue). After the current week, expenses are projected from the budget, plus an extra $1500 during the first week of the month to simulate health insurance + unbudget. Assumes a fixed $250/week income from Okapi revenue (which in turn assumes $2000/mo Okapi gross revenue). Weeks highlighted in red are net negative ending balance.</p>
  </div>
</div>
<div class="row">
  <div class="span12">
    <%= @burn_down.error %>
    <%= table @burn_down do |t|
      today = Date.today
      t.decorate /.*/ => StyleDecorator.new('background-color' => 'lightblue'), :if => ->(c,r){today = Date.today; start = r[0].value; endt = r[0].value + 7; today >= start && today < endt }
      t.decorate /.*/ => StyleDecorator.new('background-color' => '#ffcccc'), :if => ->(c,r){r[-1].value <= 0}
    end %>
  </div>
</div>
